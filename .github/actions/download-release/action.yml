name: 'Download Release Artifact'
description: 'Downloads artifact from the latest GitHub release'

inputs:
  pattern:
    description: 'Pattern to match the artifact'
    required: true
  download-path:
    description: 'Path where to download the artifact'
    required: true
    default: './downloads'
  extract-path:
    description: 'Path where to extract the artifact'
    required: true
    default: './extracted'
  token:
    description: 'GitHub token'
    required: true
    default: ${{ github.token }}
  repository:
    description: 'Repository to download from (format: owner/repo)'
    required: false
    default: ${{ github.repository }}

runs:
  using: "composite"
  steps:
    - name: Create directories
      shell: bash
      run: |
        mkdir -p "${{ inputs.download-path }}"
        mkdir -p "${{ inputs.extract-path }}"

    - name: Get and Download Latest Release Asset
      shell: bash
      run: |
        cd "${{ inputs.download-path }}"
        
        echo "Current directory: $(pwd)"
        echo "Repository: ${{ inputs.repository }}"
        echo "Pattern to match: ${{ inputs.pattern }}"
        
        echo "=== Listing available releases ==="
        LATEST_TAG=$(gh release list --repo ${{ inputs.repository }} --limit 1 | cut -f1)
        echo "Latest release tag: $LATEST_TAG"
        
        echo "=== Attempting to download release ==="
        gh release download "$LATEST_TAG" --repo ${{ inputs.repository }} --archive=zip --dir .
        
        echo "=== Downloaded files ==="
        ls -la
      env:
        GH_TOKEN: ${{ inputs.token }}

    - name: Extract Archive
      shell: bash
      run: |
        cd "${{ inputs.download-path }}"
        echo "=== Extracting files ==="
        for f in *.zip; do
          if [ -f "$f" ]; then
            echo "Extracting $f to ${{ inputs.extract-path }}"
            unzip -o "$f" -d "${{ inputs.extract-path }}"
          else
            echo "No .zip files found to extract"
          fi
        done
        
        echo "=== Extracted contents ==="
        ls -la "${{ inputs.extract-path }}"
