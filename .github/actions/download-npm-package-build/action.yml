name: 'Download NPM Package Build'
description: 'Downloads NPM package build files directly from the registry'

inputs:
  package-name:
    description: 'Name of the package to download'
    required: true
  version:
    description: 'Version of the package'
    required: false
    default: 'latest'
  output-dir:
    description: 'Directory where the package files should be extracted'
    required: true
  registry-url:
    description: 'Base URL of the npm registry'
    required: false
    default: 'https://registry.npmjs.org'
  token:
    description: 'Authentication token for the registry'
    required: true

runs:
  using: "composite"
  steps:
    - name: Create directories
      shell: bash
      run: |
        mkdir -p "${{ inputs.output-dir }}"
        TEMP_DIR=$(mktemp -d)
        echo "TEMP_DIR=$TEMP_DIR" >> $GITHUB_ENV

    - name: Download package
      shell: bash
      run: |
        # Get version-specific metadata and extract tarball URL
        PACKAGE_URL="${{ inputs.registry-url }}/${{ inputs.package-name }}/${{ inputs.version }}"
        echo "Fetching package metadata from: $PACKAGE_URL"
        
        # Add authentication header for GitHub registry
        TARBALL_URL=$(curl -s -H "Authorization: Bearer ${{ inputs.token }}" "$PACKAGE_URL" | jq -r '.dist.tarball')
        echo "Downloading from: $TARBALL_URL"
        
        # Download and extract the tarball (with auth header)
        curl -L -H "Authorization: Bearer ${{ inputs.token }}" "$TARBALL_URL" -o "$TEMP_DIR/package.tgz"
        cd "$TEMP_DIR"
        tar -xzf package.tgz
        
        # Move contents from package directory to output
        mv package/* "${{ inputs.output-dir }}/"
        
        echo "Package contents:"
        ls -la "${{ inputs.output-dir }}"
        
        # Set output version for reference
        VERSION="${{ inputs.version }}"
        echo "version=$VERSION" >> $GITHUB_OUTPUT 